{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","toggle","handletoggle","setState","event","this","props","className","summary","location","originalStartTime","dateTime","timeZone","onClick","description","end","Component","EventList","events","map","id","CitySearch","handleInputChanged","value","target","suggestions","locations","filter","toUpperCase","indexOf","query","handleItemClicked","suggestion","showSuggestions","updateEvents","undefined","type","onChange","onFocus","placeholder","style","display","NumberOfEvents","defNumber","handleInputChange","mockData","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","result","json","getToken","code","encodeCode","encodeURIComponent","response","access_token","then","res","catch","error","localStorage","setItem","getAccessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","axios","results","authUrl","data","href","getEvents","NProgress","start","startsWith","done","token","url","JSON","stringify","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.7a8c401c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nclass Event extends Component { \r\n    state = {\r\n        toggle: false,\r\n    }\r\n\r\n    handletoggle = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {event} = this.props;\r\n        const { toggle } = this.state;\r\n        return (\r\n            <div className=\"event\">\r\n                <p className=\"summary summary_title\">{event.summary}</p>\r\n                <p className=\"summary\">{'@' + event.location}</p>\r\n                <p className=\"summary\">{'Date and time: ' + event.originalStartTime.dateTime + ', Time-zone: ' + event.originalStartTime.timeZone}</p>\r\n                <button \r\n                    className=\"details-btn\"\r\n                    onClick={this.handletoggle}\r\n                >\r\n                {toggle ? 'Hide' : 'Show'}  \r\n                </button>\r\n                {toggle && (\r\n                    <div>\r\n                        <p className=\"description\">{toggle ? event.description : null}</p>\r\n                        <p className=\"summary\">{'End@' + event.end.dateTime}</p>\r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nexport default class EventList extends Component {\r\n    render() {\r\n        const {events} = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event => <li key={event.id}>\r\n                    <Event event={event} />\r\n                </li>\r\n                )}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class CitySearch extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            query : '',\r\n            suggestions: [],\r\n            showSuggestions: undefined \r\n        }\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        this.setState({ \r\n            query: value,\r\n            suggestions,\r\n        });\r\n    }\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={()=> {this.setState({showSuggestions: true})}}\r\n                    placeholder='Search cities'\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : {display: 'none'}}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li\r\n                            key={suggestion}\r\n                            onClick={()=> this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked('all')} key=\"all\"><b>See all cities</b></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NumberOfEvents extends Component {\r\n    state = {\r\n        defNumber: 32,\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            defNumber: value,\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const {defNumber} = this.state;\r\n        return (\r\n            <div className='numberOfEvents'>\r\n                <label>Number of Events: </label>\r\n                <input\r\n                    type='text'\r\n                    className='event-number-input'\r\n                    value={defNumber}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n];\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nexport const extractEvents = (events) => {\r\n    var extractEvents = events.map((event) => event);\r\n    return extractEvents\r\n}\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\n/*\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n*/\r\n\r\nconst checkToken = async (accessToken) => {\r\n    try{\r\n        const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`);\r\n        return await result.json();\r\n    }catch(error){\r\n        error.json();\r\n    } \r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    // eslint-disable-next-line no-useless-concat\r\n    const { response } = await fetch('https://zlk2czbshb.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode)\r\n    const access_token = response\r\n    .then((res) => {\r\n        return res.json();\r\n    })\r\n    .catch((error) => error);\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n    return access_token;\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://zlk2czbshb.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done();    \r\n        return mockData;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n    if (token) {\r\n        removeQuery();\r\n        // eslint-disable-next-line no-useless-concat\r\n        const url = 'https://zlk2czbshb.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList.js';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      events: [],\n      locations: [],\n    }\n}\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ? \n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render() {\n    const {events, locations} = this.state\n    return (\n      <div className=\"App\">\n        <h1 className=\"meet-logo\">LetsMeetUp</h1>\n        <h4>Choose your nearest city</h4>\n        < CitySearch locations={locations} updateEvents={this.updateEvents} />\n        < NumberOfEvents />\n        < EventList events={events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}